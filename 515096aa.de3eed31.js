(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{122:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),s=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=s(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},y=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=s(t),y=r,f=u["".concat(i,".").concat(y)]||u[y]||m[y]||a;return t?o.a.createElement(f,p(p({ref:n},l),{},{components:t})):o.a.createElement(f,p({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=y;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return l}));var r=t(3),o=(t(0),t(122));const a={title:"@RelayEnvironment"},i={unversionedId:"api/relay-environment-wrapper",id:"api/relay-environment-wrapper",isDocsHomePage:!1,title:"@RelayEnvironment",description:"The @RelayEnvironment property wrapper provides direct access to the current Relay.swift Environment.",source:"@site/docs/api/relay-environment-wrapper.md",slug:"/api/relay-environment-wrapper",permalink:"/Relay.swift/docs/api/relay-environment-wrapper",editUrl:"https://github.com/relay-tools/Relay.swift/edit/main/website/docs/api/relay-environment-wrapper.md",version:"current",sidebar:"docs",previous:{title:"relayEnvironment()",permalink:"/Relay.swift/docs/api/relay-environment-modifier"},next:{title:"@Query",permalink:"/Relay.swift/docs/api/query"}},p=[],c={toc:p};function l({components:e,...n}){return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@RelayEnvironment")," property wrapper provides direct access to the current Relay.swift ",Object(o.b)("a",{parentName:"p",href:"/Relay.swift/docs/api/environment"},"Environment"),"."),Object(o.b)("p",null,"Most of the time, you won't need to use this: the other property wrappers access the the current environment in the same way internally."),Object(o.b)("p",null,"You may need this in order to pass on the correct environment to a view that won't inherit it normally. A common way this can happen is when presenting a sheet:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-swift"},'import SwiftUI\nimport RelaySwiftUI\n\nstruct ContentView: View {\n    @RelayEnvironment var environment: Relay.Environment\n\n    @State var isPresented: Bool\n\n    var body: some View {\n        Text("Some text")\n            .sheet(isPresented: $isPresented) {\n                MySheet()\n                    .relayEnvironment(environment)\n            }\n    }\n}\n')),Object(o.b)("p",null,"Using this property wrapper requires that another view higher in the tree has used ",Object(o.b)("a",{parentName:"p",href:"/Relay.swift/docs/api/relay-environment-modifier"},"relayEnvironment()")," to set the current environment for the tree. Otherwise, your app will crash."))}l.isMDXComponent=!0}}]);