// Auto-generated by relay-compiler. Do not edit.

import Relay

struct ToDoList_user {
    var fragmentPointer: FragmentPointer

    init(key: ToDoList_user_Key) {
        fragmentPointer = key.fragment_ToDoList_user
    }

    static var node: ReaderFragment {
        ReaderFragment(
            name: "ToDoList_user",
            selections: [
                .field(ReaderLinkedField(
                    name: "todos",
                    args: [
                        LiteralArgument(name: "first", value: 100)
                    ],
                    concreteType: "TodoConnection",
                    plural: false,
                    selections: [
                        .field(ReaderLinkedField(
                            name: "edges",
                            concreteType: "TodoEdge",
                            plural: true,
                            selections: [
                                .field(ReaderLinkedField(
                                    name: "node",
                                    concreteType: "Todo",
                                    plural: false,
                                    selections: [
                                        .field(ReaderScalarField(
                                            name: "id"
                                        )),
                                        .fragmentSpread(ReaderFragmentSpread(
                                            name: "ToDoItem_todo"
                                        ))
                                    ]
                                ))
                            ]
                        ))
                    ]
                ))
            ])
    }
}


extension ToDoList_user {
    struct Data: Readable {
        var todos: TodoConnection_todos?

        init(from data: SelectorData) {
            todos = data.get(TodoConnection_todos?.self, "todos")
        }

        struct TodoConnection_todos: Readable {
            var edges: [TodoEdge_edges?]?

            init(from data: SelectorData) {
                edges = data.get([TodoEdge_edges?]?.self, "edges")
            }

            struct TodoEdge_edges: Readable {
                var node: Todo_node?

                init(from data: SelectorData) {
                    node = data.get(Todo_node?.self, "node")
                }

                struct Todo_node: Readable, ToDoItem_todo_Key {
                    var id: String
                    var fragment_ToDoItem_todo: FragmentPointer

                    init(from data: SelectorData) {
                        id = data.get(String.self, "id")
                        fragment_ToDoItem_todo = data.get(fragment: "ToDoItem_todo")
                    }
                }
            }
        }
    }
}

protocol ToDoList_user_Key {
    var fragment_ToDoList_user: FragmentPointer { get }
}

extension ToDoList_user: Relay.Fragment {}
